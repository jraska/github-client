plugins {
  id "com.jraska.module.graph.assertion" version "1.4.0"
  id "com.github.triplet.play" version "2.8.0"
  id "com.jraska.github.client.firebase"
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
if (project.hasProperty("enable-performance-plugin")) {
  apply plugin: 'com.google.firebase.firebase-perf'
}

apply plugin: 'io.fabric'

android {
  compileSdkVersion 29

  defaultConfig {
    applicationId "com.jraska.github.client"
    minSdkVersion 21
    targetSdkVersion 29
    versionName '0.19.2'
    versionCode 54
    multiDexEnabled true

    testInstrumentationRunner "com.jraska.github.client.TestRunner"
  }

  adbOptions {
    installOptions "-g"
  }

  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_8
    targetCompatibility JavaVersion.VERSION_1_8
  }

  signingConfigs {
    debug {
      storeFile file("debug.keystore")
      storePassword "github-client"
      keyAlias "github-client"
      keyPassword "github-client"
    }
    release {
      storeFile file("prod.keystore")
      storePassword = System.getenv('GITHUB_CLIENT_STORE_PASS')
      keyAlias "prod"
      keyPassword System.getenv('GITHUB_CLIENT_KEY_PASS')
    }
  }

  buildTypes {
    debug {
      signingConfig signingConfigs.debug
      minifyEnabled false
      proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
      applicationIdSuffix '.dev'
      versionNameSuffix '-dev'
    }

    release {
      signingConfig signingConfigs.release
      minifyEnabled true
      proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
    }
  }

  testOptions {
    unitTests.returnDefaultValues = true
  }

  packagingOptions {
    exclude 'META-INF/licenses/ASM'
  }
}

dependencies {
  implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

  implementation project(':core')
  implementation project(':core-android')
  implementation project(':navigation')
  implementation project(':lib:navigation-deeplink')
  implementation project(':lib:identity')
  implementation project(':lib:network-status')
  implementation project(':feature:push')
  implementation project(':feature:users')
  implementation project(':feature:settings')
  implementation project(':feature:about')
  implementation project(':feature:shortcuts')
  implementation project(':feature:chrome-custom-tabs')

  implementation 'androidx.appcompat:appcompat:1.1.0'
  implementation 'androidx.legacy:legacy-support-v4:1.0.0'
  implementation 'com.google.android.material:material:1.1.0'
  implementation 'androidx.cardview:cardview:1.0.0'
  implementation 'androidx.core:core:1.3.1'
  implementation 'androidx.vectordrawable:vectordrawable-animated:1.1.0'
  implementation 'androidx.media:media:1.1.0'

  implementation 'com.google.firebase:firebase-core:17.2.3'
  implementation 'com.google.firebase:firebase-config:19.1.2'
  implementation 'com.google.firebase:firebase-perf:19.0.5'
  implementation 'com.crashlytics.sdk.android:crashlytics:2.10.1'

  implementation 'androidx.lifecycle:lifecycle-runtime:2.2.0'

  implementation 'com.facebook.fresco:fresco:2.2.0'

  implementation 'com.airbnb.android:epoxy:3.11.0'

  kapt rootProject.ext.daggerAnnotationProcessor
  implementation rootProject.ext.dagger

  implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'
  implementation 'com.jakewharton.threetenabp:threetenabp:1.2.4'
  implementation 'com.squareup.okhttp3:logging-interceptor:4.6.0'

  testImplementation 'com.google.code.gson:gson:2.8.6'

  testImplementation 'junit:junit:4.13'
  testImplementation 'javax.inject:javax.inject:1'
  testImplementation 'org.mockito:mockito-core:3.3.3'
  testImplementation 'org.threeten:threetenbp:1.4.4' // to fix failures with three ten db

  androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
  androidTestImplementation 'androidx.test:runner:1.2.0'
  androidTestImplementation 'androidx.test:rules:1.2.0'
  androidTestImplementation 'org.assertj:assertj-core:3.15.0'
  androidTestImplementation 'org.mockito:mockito-core:3.3.3'
  androidTestImplementation 'org.mockito:mockito-android:3.3.3'
  androidTestImplementation 'com.airbnb.okreplay:okreplay:1.6.0'
  androidTestImplementation 'com.airbnb.okreplay:espresso:1.6.0'
  androidTestImplementation 'com.squareup.rx.idler:rx2-idler:0.11.0'
  androidTestImplementation project(':core-testing')
}

apply plugin: 'com.jraska.module.graph.assertion'

moduleGraphAssert {
  maxHeight = 4
  moduleLayers = [":feature\\S*", ":lib\\S*", ":core\\S*"]
  moduleLayersExclude = [":core-android -> :core"]
  restricted = [":feature:\\S* -X> :not-wanted-module"]
}

apply plugin: 'com.google.gms.google-services'

play {
  track = 'alpha'
  serviceAccountCredentials = file("$buildDir/play-publish-key.json")
}

project.afterEvaluate {
  def setupPlayPublisherJsonTask = tasks.register("setupPlayPublisherJson") {
    doFirst {
      def credentials = System.getenv("PLAY_PUBLISHER_CREDENTIALS")
      if (credentials == null) {
        throw new GradleException("PLAY_PUBLISHER_CREDENTIALS not set, cannot release")
      }
      new File("$buildDir/play-publish-key.json").write(credentials)
    }
  }

  tasks.named("publishBundle").configure({ dependsOn(setupPlayPublisherJsonTask) })
}
