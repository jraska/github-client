apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
if (project.hasProperty("enable-performance-plugin")) {
  apply plugin: 'com.google.firebase.firebase-perf'
}

apply plugin: 'io.fabric'

android {
  compileSdkVersion 28

  defaultConfig {
    applicationId "com.jraska.github.client"
    minSdkVersion 21
    targetSdkVersion 28
    versionName '0.17.0'
    versionCode 50
    multiDexEnabled true

    testInstrumentationRunner "com.jraska.github.client.TestRunner"
  }

  adbOptions {
    installOptions "-g"
  }

  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_8
    targetCompatibility JavaVersion.VERSION_1_8
  }

  signingConfigs {
    debug {
      storeFile file("debug.keystore")
      storePassword "github-client"
      keyAlias "github-client"
      keyPassword "github-client"
    }
    release {
      storeFile file("prod.keystore")
      storePassword = System.getenv('GITHUB_CLIENT_STORE_PASS')
      keyAlias "prod"
      keyPassword System.getenv('GITHUB_CLIENT_KEY_PASS')
    }
  }

  buildTypes {
    debug {
      signingConfig signingConfigs.debug
      minifyEnabled false
      proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
      applicationIdSuffix '.dev'
      versionNameSuffix '-dev'
    }

    release {
      signingConfig signingConfigs.release
      minifyEnabled true
      proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
    }
  }

  testOptions {
    unitTests.returnDefaultValues = true
  }

  dynamicFeatures = [":feature:about", ":feature:settings"]
}

dependencies {
  implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

  api project(':core')
  api project(':core-android')
  api project(':lib-identity')
  api project(':lib-dynamic-features')
  api project(':feature:push')
  api project(':feature:users')
  api project(':feature:settings_entrance')
  api project(':feature:about_entrance')
  api project(':feature:shortcuts')

  implementation 'androidx.appcompat:appcompat:1.1.0-rc01'
  implementation 'androidx.legacy:legacy-support-v4:1.0.0'
  implementation 'com.google.android.material:material:1.1.0-alpha08'
  implementation 'androidx.cardview:cardview:1.0.0'
  implementation 'androidx.browser:browser:1.0.0'
  implementation 'androidx.core:core:1.2.0-alpha02'
  implementation 'androidx.vectordrawable:vectordrawable-animated:1.1.0-rc01'
  implementation 'androidx.media:media:1.1.0-rc01'

  implementation 'com.google.firebase:firebase-core:17.0.1'
  implementation 'com.google.firebase:firebase-config:18.0.0'
  implementation 'com.google.firebase:firebase-perf:18.0.1'
  implementation 'com.crashlytics.sdk.android:crashlytics:2.10.1'

  implementation 'androidx.lifecycle:lifecycle-runtime:2.0.0'

  implementation 'com.facebook.fresco:fresco:2.0.0'

  implementation 'com.airbnb.android:epoxy:3.7.0'

  kapt 'com.google.dagger:dagger-compiler:2.24'

  implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'
  implementation 'com.jakewharton.threetenabp:threetenabp:1.2.1'

  testImplementation 'com.google.code.gson:gson:2.8.5'

  testImplementation 'junit:junit:4.12'
  testImplementation 'javax.inject:javax.inject:1'
  testImplementation 'org.mockito:mockito-core:3.0.0'
  testImplementation 'org.threeten:threetenbp:1.4.0' // to fix failures with three ten db

  androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
  androidTestImplementation 'androidx.test:runner:1.2.0'
  androidTestImplementation 'androidx.test:rules:1.2.0'
  androidTestImplementation 'org.assertj:assertj-core:3.12.2'
  androidTestImplementation 'org.mockito:mockito-core:3.0.0'
  androidTestImplementation 'org.mockito:mockito-android:3.0.0'
  androidTestImplementation 'com.airbnb.okreplay:okreplay:1.4.0'
  androidTestImplementation 'com.airbnb.okreplay:espresso:1.4.0'
  androidTestImplementation project(':core-testing')
}

apply plugin: 'com.google.gms.google-services'
repositories {
  mavenCentral()
}
